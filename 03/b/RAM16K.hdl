// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=load1, b=load2, c=load3, d=load4);
    Mux16(a=prevout1, b=in, sel=load1, out=mout1);
    RAM4K(in=mout1, load=true, address=address[0..11], out=prevout1);
    Mux16(a=prevout2, b=in, sel=load2, out=mout2);
    RAM4K(in=mout2, load=true, address=address[0..11], out=prevout2);
    Mux16(a=prevout3, b=in, sel=load3, out=mout3);
    RAM4K(in=mout3, load=true, address=address[0..11], out=prevout3);
    Mux16(a=prevout4, b=in, sel=load4, out=mout4);
    RAM4K(in=mout4, load=true, address=address[0..11], out=prevout4);
    Mux4Way16(a=prevout1, b=prevout2, c=prevout3, d=prevout4, sel=address[12..13], out=out);
}
