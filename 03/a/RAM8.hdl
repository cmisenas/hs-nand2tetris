// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    Mux16(a=prevout1, b=in, sel=load1, out=mout1);
    Register(in=mout1, load=true, out=prevout1);
    Mux16(a=prevout2, b=in, sel=load2, out=mout2);
    Register(in=mout2, load=true, out=prevout2);
    Mux16(a=prevout3, b=in, sel=load3, out=mout3);
    Register(in=mout3, load=true, out=prevout3);
    Mux16(a=prevout4, b=in, sel=load4, out=mout4);
    Register(in=mout4, load=true, out=prevout4);
    Mux16(a=prevout5, b=in, sel=load5, out=mout5);
    Register(in=mout5, load=true, out=prevout5);
    Mux16(a=prevout6, b=in, sel=load6, out=mout6);
    Register(in=mout6, load=true, out=prevout6);
    Mux16(a=prevout7, b=in, sel=load7, out=mout7);
    Register(in=mout7, load=true, out=prevout7);
    Mux16(a=prevout8, b=in, sel=load8, out=mout8);
    Register(in=mout8, load=true, out=prevout8);
    Mux8Way16(a=prevout1, b=prevout2, c=prevout3, d=prevout4, e=prevout5, f=prevout6, g=prevout7, h=prevout8, sel=address, out=out);
}
